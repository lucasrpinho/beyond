<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAk
        DAAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABFgEAARYBAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFY
        AwABFgMAAQEBAAEQBQABIAEPEgAB3gF7AdcBWgF0AU4BlAFSAdYBWgGcAXMB3gF7Ad4BewHeAXsB3gF7
        Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7Ad4BewHeAXsB3gF7hAABtgFWAdABQQGO
        ATkBzwE5Ac4BOQG1AVYBewFvAf8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/
        AX8B/wF/Af8BfwH/AX8B3gF7hAABjAE1Ac0BSQHwAU0B8gFBAY4BNQHPAT0BtQFWAb0BdwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B3gF7DAAB/wF/Af4BfwH/
        AX8B/wF/cAABrAFyAUkBbgEMAV4B8QFNAfMBQQGvATUBzgE5AXMBTgG9AXcB/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B3gF7DAAB3QF7AXQBZwGVAWsB3QF7cAABjgF+
        AYoBegFqAW4BDAFeAfEBTQHxAUEB0AE5Ac4BOQG1AVYBewFvAf8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B3gF7CgABuwF3AXIBYwEHAUsBCAFLAXUBZwHdAXtuAAH2AX4BrwF+
        AYoBegFJAXIBDAFeARABUgHxAUEBrwE1Ae8BPQG1AVYBnAFzAf8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwHeAXsGAAH/AX8B3AF3AVEBXwEGAUcBwAE6AcABOgEpAU8BdAFnAbsBdwH/
        AX9qAAH/AX8B9QF+Aa4BfgGqAX4BSAFyAQwBXgHxAU0BFAFCAa4BNQHPATkBlAFSAd4BewHeAXsB3gF7
        Ad4BewHeAXsB3gF7Af8BfwH/AX8B/wF/Af8BfwHeAXsEAAH/AX8B3QF3ASoBUwHiAT4BwAE6AeABPgHg
        AT4B4AE+AeIBPgEIAU8B2wF3Af8Bf2gAAf8BfwHdAX8BFgF/AW4BfgHKAX4BSQFuAewBXQHxAU0B8gFB
        AdABPQHOAT0BEAFGARABRgEQAUYBEAFGARABRgFSAUoBGAFjAf8BfwH/AX8B/wF/Ad4BewQAAboBcwEp
        AU8B4gE+AeABPgHgAT4B4AE+AcABPgHgAT4B4AE+AeEBPgEpAU8BmAFvaAAB/wF/Af8BfwG8AX8BFgF/
        Aa4BfgGKAXoBSgFuAQwBXgERAUoB8AE9Ac8BOQETAT4BNAFCAVUBRgF1AUoBVAFGAREBQgEyAUoB1gFa
        Ad4BewH/AX8B3gF7AgABuQFzAS0BVwHgAT4B4AE+AeEBPgEGAUsBTQFXAXIBYwErAVMB4gFCAeABPgHg
        AT4BLAFXAbkBbwH/AX9kAAH/AX8B/wF/Af8BfwHdAX8B9QF+Aa8BfgGLAXoBKwFuATEBTgEzAUYBdQFG
        AdoBSgH7AVIBPAFXAV0BXwE8AVsBtgFOATEBQgHQAT0BGAFjAb0BdwHeAXsB3QF3ASsBUwHgAT4BwAE6
        AeABPgHiAUIBLQFXAboBcwHdAXsBdQFnAQYBSwHgAT4B4AE+AeEBPgEqAVMBuwFzAf8Bf2IAAf8BfwH/
        AX8B/wF/Af8BfwH/AX8B9gF+AVABfgFQAXoBNQFOAdoBTgF/AVsB3wFjAf8BZwH/AWsB/wFvAf8BbwH/
        AXMBOwFjARQBQgGuATkB9wFeAd4BewEoAU8B4gE+AcABOgHgAT4BwAE6AcABPgFxAV8EAAG6AXMBTQFX
        AcABOgHgAT4B4AE+AeABPgHjAUIBugFzYgAB/wF/Af8BfwH/AX8B/wF/Af8BfwG9AX8BOgFzAZcBVgHa
        AVIBXQFXAb8BXwHfAWMB/wFrAf8BbwH/AXMB/wF7Af8BewG+AXMBGgFbAdABOQEyAUYBOQFnAeIBPgHg
        AT4BwAE+AcABOgHgAT4BlQFnAd4BewQAAf8BfwG6AXMBKgFTAeMBQgHAAT4B4AE+AcABPgEqAVMBmAFv
        YAAB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8BnQFvAdoBTgFdAVsBnwFbAb8BXwHfAWMB/wFrAf8BcwH/
        AXcB/wF/Af8BfwH/AXcBvgFnAVUBQgHxAT0B1gFaASgBTwHiAT4BwAE6AeMBQgFPAVsB3AF3CAAB/gF/
        AbkBbwFNAVcB5AFGAeABPgHgAT4B4AE+ASsBUwG5AW8B/wF/XAAB/wF/Af8BfwH/AX8B/wF/Af8BfwH/
        AX8BngFvAfsBUgGeAV8BvwFfAb8BWwH/AWMB/wFrAf8BcwH/AXcB/wF7Af8BewH/AXcB3wFrAdoBTgHy
        AT0BlQFWAZYBawEtAVMBCAFLAU0BWwHdAXcB/wF/DAABuQFvAU4BVwHjAUIB4AE+AeABPgHgAT4BBQFH
        AbsBcwH/AX9aAAH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwGdAW8B2gFOAb4BYwG/AV8BnwFbAd8BYwH/
        AWsB/wFvAf8BcwH/AXcB/wF3Af8BcwH/AWsB+wFOARMBPgGVAVYB/wF/Af8BfwHdAXsB3QF3Af8BfwH/
        AX8MAAH/AX8BuwF3AU8BWwHiAT4B4AE+AeABPgHgAT4BBQFHAbkBb1oAAf8BfwH/AX8B/wF/Af8BfwH/
        AX8B/wF/AZ0BbwHaAVIBvgFjAb8BXwGfAVsB3wFfAf8BZwH/AWsB/wFvAf8BcwH/AW8B/wFvAd8BZwH7
        AU4BEwE+AZUBVgQAAf8BfwH/AX8B/wF/EAAB/wF/AdwBdwFxAV8BBgFHAcABPgHgAT4BwAE+ASwBVwG5
        AW9YAAH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwGeAW8B+wFSAb4BYwG/AWMBvwFjAb8BXwHfAWMB/wFn
        Af8BawH/AWsB/wFrAf8BZwHfAWMB2gFOATMBQgG1AVYcAAH/AX8B3AF3AXQBYwEJAU8B4AE6AcABOgHi
        AUIBUAFfWAAB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8BngFvAfsBUgG+AWMB3wFrAb8BawGfAV8BvwFf
        Ad8BXwHfAWMB3wFjAd8BYwHfAWMBvgFfAXgBRgFUAUYB9wFeIAAB/gF7AZcBawHkAUIBwAE+AeEBPgFO
        AVtYAAH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwGeAW8B+wFSAX0BXwHfAXMB/wF7Ad8BbwG/AWMBvwFf
        AZ8BWwGfAVsBvwFfAb8BXwFdAVcBNgFCAdkBWgG9AXcgAAH/AX8B/gF/AbsBcwEHAUcBKQFPAZcBa1gA
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Ad8BdwF9AWcBPAFfAZ0BZwHfAXMB/wF3Ad8BZwG/AV8BvwFb
        Ab8BXwGfAVsBPQFTAdoBTgH6AV4BnQFzAd4BeyIAAf8BfwH/AX8BugFzAboBcwHdAXtYAAH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/AVwBZwFcAV8BnQFjAZ4BawGeAWMBngFfAZ4BWwGeAV8BPAFX
        AfoBUgHaAVoB3gF7Af8BfwHeAXsoAAH/AX8B/wF/WAAB/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        Af8BfwH/AX8BXQFnAdoBUgHaAVIBuQFKAboBTgH8AVIB2wFOAXUBSgHWAVoB/wF/Af8BfwH/AX8B3gF7
        hAABQgFNAT4HAAE+AwABKAMAAVgDAAEWAwABAQEAAQEFAAEIAQEWAAP/AwABAwL/AfAIAAEDAv8B8AgA
        AQMB8AH/AfAIAAEDAfAB/wHwCAABAwHgAX8B8AgAAQMBgAEfAfAIAAEDAQABDwHwCAABAwEAAQ8B8AgA
        AQIBAAEDAfAKAAEBAfAJAAEGAQEB8AkAAQYBAAHwCQABDwEAATAJAAEPAcABEAkAAQ8BwAEQCAABAwEf
        AeAJAAEDAf8B8AkAAQMB/wH8CQABAwH/AfwJAAEDAf8B/gkAAQMC/wHACAABAwL/AfAGAAs=
</value>
  </data>
</root>